import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion


    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    defaultConfig {
        // 分包 ，防止包中方法数达到65535的上限
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        //添加部分
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        sit {
            addBuildConfigFields(getPropeeties('sit'))
            minifyEnabled false
            debuggable true
        }

        pre {
            addBuildConfigFields(getPropeeties('pre'))
            zipAlignEnabled true
            debuggable true
        }
        prd {
            addBuildConfigFields(getPropeeties('prd'))
            zipAlignEnabled true
            //minifyEnabled true
            debuggable false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


}


ext {
    isLibrary = true
    pomArtifactId = "Common"
    pomDescription = "Common of android picker"
}


def injectResource(String mainColor){
    def str = new FileInputStream(file("./src/main/res/values/colors.xml")).text
    Matcher matcher = Pattern.compile("<[\\S-\\s]+>").matcher(str)
    matcher.find()
    def maStr = matcher.group().replaceAll("<color name=\"main_color\">([#A-Za-z0-9]+)</color>", "<color name=\"main_color\">${mainColor.replaceAll("\"","")}</color>")
    new FileOutputStream(file("./src/main/res/values/colors.xml")).write(maStr.getBytes())
}
def getPropeeties(String fileName) {
    Map<String, com.android.builder.model.ClassField> fields = new HashMap<>()
    Properties props = new Properties()
    props.load(new FileInputStream(file("../etc/${fileName}.properties")))
    for (Map.Entry<String, String> p : props.entrySet()) {
        String pValue = p.getValue()
        String pKey = p.getKey()
        if(pKey == "MainColor"){
            injectResource(pValue)
        }
        if(pValue.contains("\"")){
            fields.put(pKey, new com.android.builder.internal.ClassFieldImpl("String", pKey, pValue))
        }else{
            fields.put(pKey, new com.android.builder.internal.ClassFieldImpl("int", pKey, pValue))
        }

    }
    return fields
}

dependencies {

    //noinspection GradleCompatible
    compile 'com.android.support:support-v4:25.0.0'
    compile 'com.android.support:support-annotations:25.0.0'
    api "com.android.support:appcompat-v7:${rootProject.ext.support_version}"

    // lib
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/Parse-1.9.4.jar')
    compile files('libs/commons-codec-1.6.jar')
    compile files('libs/alipaySdk-20160516.jar')

    //Retrofit
    api 'com.squareup.retrofit2:retrofit:2.2.0'
    api 'com.squareup.retrofit2:converter-gson:2.0.2'

    //Retrofit通过GSON将结果转换为Bean对象
    api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //让Retrofit支持RxJava
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api 'io.reactivex.rxjava2:rxjava:2.0.1'

    //RxJava
    api 'io.reactivex:rxandroid:1.0.1'

    // RxAndroid

    //日志拦截器
    api 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'org.greenrobot:eventbus:3.0.0'
    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.0.8@aar'

    //分包
    api 'com.android.support:multidex:1.0.2'

    //json解析封装框架
    api 'com.alibaba:fastjson:1.2.8'

    //    compile 'com.commit451:PhotoView:1.2.4'//图片缩放

    //打印日志

    //    api 'com.orhanobut:logger:1.13'

    //显示图片框架
    api 'com.github.bumptech.glide:glide:3.6.1'


    //悬浮动画菜单
    compile 'com.github.clans:fab:1.6.4'
    api "com.android.support:recyclerview-v7:${rootProject.ext.support_version}"

    //友盟统计
    api 'com.umeng.analytics:analytics:latest.integration'
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-12'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation 'com.google.code.gson:gson:2.2.4'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.kotlin_version}"
    api "org.jetbrains.anko:anko:$rootProject.ext.anko_version"
}
repositories {
    mavenCentral()
}


